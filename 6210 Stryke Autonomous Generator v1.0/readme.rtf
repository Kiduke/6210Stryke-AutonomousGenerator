{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 6.3.9600}\viewkind4\uc1 
\pard\f0\fs22 ##################################################################                                                               #\par
#Autonomous Generator v1.0                                      #                                           #                                                               #\par
#FTC 6210 ViperBots Stryke                                      #\par
#Email: FTC6210@gmail.com                                       #\par
#Twitter @FTC6210 ({{\field{\*\fldinst{HYPERLINK www.twitter.com/FTC6210 }}{\fldrslt{www.twitter.com/FTC6210\ul0\cf0}}}}\f0\fs22 )                     #\par
#Github:                                                        #\par
#\tab {{\field{\*\fldinst{HYPERLINK https://github.com/Kiduke/6210Stryke-AutonomousGenerator }}{\fldrslt{https://github.com/Kiduke/6210Stryke-AutonomousGenerator\ul0\cf0}}}}\f0\fs22   #                                                            #                                                               #\par
#                                                               #\par
#libsModified.h                                                 #\par
#Software designed by John Stegman ({{\field{\*\fldinst{HYPERLINK http://4211thebombers.org/ }}{\fldrslt{http://4211thebombers.org/\ul0\cf0}}}}\f0\fs22 ) #\par
#Adapted and revised by 6299 Quad X ({{\field{\*\fldinst{HYPERLINK http://teamQuadX.org/ }}{\fldrslt{http://teamQuadX.org/\ul0\cf0}}}}\f0\fs22 )     #\par
#Expanded and documented by 6210 Stryke                         #\par
#                                                               #\par
#Xander's Driver Suite                                          #\par
#Created by Xander Soldaat (xander@botbench.com)                #\par
# {{\field{\*\fldinst{HYPERLINK http://botbench.com/ }}{\fldrslt{http://botbench.com/\ul0\cf0}}}}\f0\fs22                                           #\par
#                                                               #\par
#Include libsModified.h and the driver folder in same folder as #    #autonomous program.    \tab\tab\tab\tab\tab\tab\tab     #\par
#                                                               #\par
#################################################################\par
\par
Thanks for using the Autonomous Generator v1.0! We hope to extend and simplify autonomous code creation by providing resources, tools, and assistance to teams anywhere.\par
\par
If you have any concerns, questions, or even answers: please email us at FTC6210@gmail.com or contact us on Twitter @FTC6210.\par
\par
You can download the latest versions of the program from our GitHub repository \par
({{\field{\*\fldinst{HYPERLINK https://github.com/Kiduke/6210Stryke-AutonomousGenerator }}{\fldrslt{https://github.com/Kiduke/6210Stryke-AutonomousGenerator\ul0\cf0}}}}\f0\fs22 ).\par
\par
\par
Preparing autonomous program for use:\par
\par
The following must be directly below the automaticly generated motor configuration code:\par
#include "libsModified.h"\par
\par
Base wheel configuration should be two parallel sides. Four wheels each with a motor is the intent, but the program will also work with tank treads and/or with a single motor on each side.\par
\par
Encoders should be placed on the front two wheels, or on each of the wheels in the case of a single motor on each side.\par
\par
In the case of 4 parallel motors, they should be named as such in the configuration:\par
\par
Front Left Motor "motorFL"\par
Back Left Motor "motorBL"\par
Front Right Motor "motorFR"\par
Back Right Motor "motorBR"\par
\par
If you only have two parallel motors, one on each side:\par
\par
Left Motor "motorFL"\par
Right Motor "motorFR"\par
\par
Your Gyroscope should be named SENSOR_GYRO in the configuration.\par
Your IR Reciever should be name SENSOR_IR in the configuration.\par
\par
Certain motors may need to be reversed in the configuration to provide correct behavior. The best way to test this is to check each wheel's direction when executing a basic forward Move command.\par
\par
\par
How to Use:\par
\par
1. Enter Wheel Radius. This can be in any unit, so long as you keep all motion commands consistent with this unit. For instance, if you have 2.0 inch radius wheels, a new Move command with a distance of 25 would move 25 inches.\par
\par
2. (Optional) Enter motion threshold. This is the amount of angular freedom your robot has while executing a Move command in degrees. 0.8 is the recommended value.\par
\par
3. Add commands.\par
\tab I. Move. Moves the robot a distance at a speed using\par
\tab encoders for distance and the gyroscope for stabilization.\par
\tab\tab A. Speed. Ranges from 1-100. Determines the speed at \tab\tab\tab which the motors will turn.\par
\tab\tab B. Distance. No limit. Determines the distance in \tab\tab\tab units (same as Radius) that the robot will move. \tab\tab\tab\tab Positive for forward, negative for backward.\par
\tab\tab C. Time. Optional. The time at which the robot will \tab\tab\tab stop in the case of failed encoders. Best to leave it \tab\tab\tab alone...\par
\tab\par
\tab II. Turn. Rotates the robot around its center axis, by \tab spinning left and right wheels.\par
\tab\tab A. Speed. Ranges from 1-100. Speed at which the robot \tab\tab\tab turns.\par
\tab\tab B. Degrees. No Limit. Degrees of rotation.\par
\tab\tab C. Time. Optional. The time at which the robot will \tab\tab\tab stop in the case of failed encoders.\par
\tab\par
\tab III. Arc Turn. Rotates the robot around its side axis, \tab spinning only one side of the wheels.\par
\tab\tab A. Speed. Ranges from 1-100. Speed at which the robot \tab\tab\tab turns.\par
\tab\tab B. Degrees. No Limit. Degrees of rotation.\par
\tab\tab C. Time. Optional. The time at which the robot will \tab\tab\tab stop in the case of failed encoders.\par
\tab\par
\tab IV. Move IR. Moves the robot until a defined value is read \tab\tab by the IR Sensor.\par
\tab\tab A. Speed. Speed at which the robot moves. Lower is \tab\tab\tab more accurate.\par
\tab\tab B. IR Target. The IR sensor value the robot will stop \tab\tab\tab at.\par
\par
Commands will be added in order, Top to Bottom of the Queue. Items can be selected and moved up and down in the Queue, or removed.\par
\par
4. Generate Code. Just press the button! Your code should show up in the Code box and can be easily copied for pasting in RobotC.\par
\par
\par
\par
Example Program:\par
\par
//The following code provides an example of properly configured code. \par
\par
#pragma config(Hubs,  S1, HTMotor,  HTMotor,  none,     none)\par
#pragma config(Sensor, S1,     ,               sensorI2CMuxController)\par
#pragma config(Sensor, S2,     SENSOR_GYRO,    sensorI2CHiTechnicGyro)\par
#pragma config(Sensor, S3,     SENSOR_IR,      sensorHiTechnicIRSeeker1200)\par
#pragma config(Motor,  mtr_S1_C1_1,     motorBL,       tmotorTetrix, openLoop, reversed)\par
#pragma config(Motor,  mtr_S1_C1_2,     motorBR,       tmotorTetrix, openLoop)\par
#pragma config(Motor,  mtr_S1_C2_1,     motorFL,       tmotorTetrix, openLoop, encoder)\par
#pragma config(Motor,  mtr_S1_C2_2,     motorFR,       tmotorTetrix, openLoop, reversed, encoder)\par
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//\par
\par
#include "libsModified.h"; //Must be in code!!!\par
\par
task main()\par
\{\par
\tab waitForStart(); //pauses code until the match begins\par
\tab\par
\tab //Move 100 inches backwards at a speed of 30\par
\tab moveToDistance (-30, -100.0, 2.0, 0.8, 5000);\par
\par
\tab //Turn 45 degrees clockwise at a speed of 50\par
\tab turn(50, 45, 5000);\par
\par
\tab //Move at a speed of 20 until SENSOR_IR reads 8\par
\tab moveIR(20, 8);\par
\par
\tab //Turn 45 degrees counter-clockwise at a speed of 30\par
\tab turn(-30, -45, 5000);\par
\par
\tab //Move 30 inches forward at a speed of 70\par
\tab moveToDistance (70, 30.0, 2.0, 0.8, 5000);\par
\par
\tab stopMotors();\par
\}\par
}
 